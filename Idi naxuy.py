import aiohttp
import os
from .. import loader
from telethon.tl.types import Message

version = (1, 0, 0)  # –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è

@loader.tds
class Idinaxuy(loader.Module):
    """–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–æ–≥–æ @wolluser"""
    strings = {
        "name": "Idi naxuy",
        "developer": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: musiczhara0"
    }

    async def client_ready(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è"""
        url = "https://raw.githubusercontent.com/musiczhara0/sosat/main/Idi%20naxuy.py"
        module_path = os.path.abspath(__file__)

        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(url) as response:
                    if response.status == 200:
                        content = await response.text()
                    else:
                        await self._client.send_message("me", "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Ä—Å–∏–∏ –º–æ–¥—É–ª—è.")
                        return

            remote_version = None
            for line in content.splitlines():
                if line.startswith("version = "):
                    remote_version = eval(line.split("=", 1)[1].strip())
                    break

            if remote_version and remote_version > version:
                await self._client.send_message("me", "–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è. –û–±–Ω–æ–≤–ª—è—é...")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é –º–æ–¥—É–ª—è –≤ —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
                with open(module_path, "w", encoding="utf-8") as module_file:
                    module_file.write(content)

                # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ Hikka
                await self.reload_module()

                await self._client.send_message("me", "‚úÖ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.")
            else:
                await self._client.send_message("me", "‚ÑπÔ∏è –£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è.")
        except Exception as e:
            await self._client.send_message("me", f"üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏: {str(e)}")

    async def –ø–æ–¥—Ä–æ—á–∏—Ç—åcmd(self, message: Message):
        """–õ—É—á—à–µ –ø–æ–¥—Ä–æ—á–∏—Ç—å, —á–µ–º –º–∞—Ç–µ–º–∞—Ç–∏–∫—É —É—á–∏—Ç—å üòé"""
        await self.send_voice(message, "https://t.me/SosatXuyEtoXorosho/2")

    async def –¥–µ–≤–æ—á–∫–∞cmd(self, message: Message):
        """–î–µ–≤–æ—á–∫–∞ –∫–∞–∫ –≤–∞–π—Ñ–∞–π"""
        await self.send_voice(message, "https://t.me/SosatXuyEtoXorosho/3")

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã...

    async def send_voice(self, message: Message, link: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ"""
        reply = await message.get_reply_message()
        await message.delete()
        await self._client.send_file(
            message.chat_id,
            link,
            voice_note=True,
            reply_to=reply.id if reply else None,
        )

    async def reload_module(self):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã Hikka"""
        await loader.modules.reload(self)
